@page "/Todos"
@using Domain.Contracts
@using Domain.Model
@inject ITodoHome TodoHome;
<h3>Todos</h3>

@if (todos == null)
{
    <p> <em> Loading...</em></p>
}
else if (!todos.Any())
{
    <p><em>
        No Item , please add some todo.
    </em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Owner Id </th>
            <th>Todo ID</th> 
            <th>Title</th> 
            <th>Completed?</th>
            <th>Remove</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in todos)
        {
            <tr>
                <td>@item.OwnerId</td>
                <td>@item.Id</td>
                <td>@item.Title</td>
                <td>@item.IsCompleted</td>
                
            </tr>
        }
        </tbody>
    </table>
}
@code {
    private ICollection<Todo> todos;
    private string errorLabel;

    protected override async Task OnInitializedAsync()
    {
        todos = await TodoHome.GetAsync();
    }

    private async Task RemoveTodo(int id)
    {
        errorLabel = "";
        try
        {
            Todo todoToRemove = todos.First(todo => todo.Id == id);
            await TodoHome.DeleteAsync(id);
            todos.Remove(todoToRemove);
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
           
        }
    }
}